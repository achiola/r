dataframe[name] <- scale(dataframe[,col])
}
cat(paste("Hemos normalizado ", length(cols), " variable(s)"))
dataframe
}
housing.2 <- scale.many(housing, c(1, 3, 5:8))
scale.many <- function(dataframe, cols) {
names <- names(dataframe)
for(col in cols) {
name <- paste(names[cols], "z", sep = ".")
dataframe[name] <- scale(dataframe[,col])
}
cat(paste("Hemos normalizado ", length(cols), " variable(s)"))
dataframe
}
housing.2 <- scale.many(housing, c(1, 3, 5:8))
View(housing.2)
students <- read.csv("Seccion 03 - Adquirir y preparar nuestros ingredientes - Los Datos/data-conversion.csv")
View(students)
#comenzamos con la variable income
#la vamos a convertir a categorica
bp <- c(-Inf, 10000, 31000, Inf)
names <- c("Low", "Average", "High")
students$Income.cat <- cut(students$Income, breaks = bp, labels = names)
#sino indicamos etiquetas.. se le asigna
students$Income.cat <-2 cut(students$Income, breaks = bp)
#sino indicamos etiquetas.. se le asigna
students$Income.cat2 <- cut(students$Income, breaks = bp)
#Cortes hechos por R
students$Income.cat3 <- cut(students$Income, breaks = 4, labels = c("L1", "L2", "L3", "L4"))
students$Income.cat4 <- cut(students$Income, breaks = 4)
students <- read.csv("Seccion 03 - Adquirir y preparar nuestros ingredientes - Los Datos/data-conversion.csv")
install.packages("dummies")
library(dummies)
View(students)
students.dummy <- dummy.data.frame(students, sep = ".")
library(dummies)
students.dummy <- dummy.data.frame(students, sep = ".")
View(students.dummy)
# Solo una columna
dummy(students$State, sep = ".")
#varias columnas
dummy.data.frame(students, names = c("State","Gender"),sep = ".")
housing.data <- read.csv("Seccion 03 - Adquirir y preparar nuestros ingredientes - Los Datos/housing-with-missing-value.csv")
View(housing.data)
housing.data <- read.csv("Seccion 03 - Adquirir y preparar nuestros ingredientes - Los Datos/housing-with-missing-value.csv",
stringsAsFactors = FALSE)
# resumen
summary(housing.data)
# omitirlos
housing.data.1 <- na.omit(housing.data)
View(housing.data.1)
summary(housing.data.1)
#Eliminar los NA de ciertas columnas
drop_na <- c("rad") #rad es el nombre de la columna
housing.data.2 <- housing.data[complete.cases(housing.data[,!(names(housing.data))%in% drop_na]),]
View(housing.data.2)
summary(housing.data.2)
##Podemos eliminar una columna completa
housing.data$rad <- NULL
summary(housing.data)
housing.data <- read.csv("Seccion 03 - Adquirir y preparar nuestros ingredientes - Los Datos/housing-with-missing-value.csv",
stringsAsFactors = FALSE)
housing.data.3 <- housing.data[,!(names(housing.data) %in% drops)]
#Volvemos a cargar
#Eliminamos varias columnas
drops <- c("rad","ptratio")
housing.data.3 <- housing.data[,!(names(housing.data) %in% drops)]
View(housing.data.3)
summary(housing.data.3)
### 35. Formas de completar la información que falta
install.packages("Hmisc")
library(Hmisc)
View(housing.data)
housing.data.4 <- housing.data
View(housing.data.4)
housing.data.4$ptratio <- impute(housing.data.4$ptratio, mean)
summary(housing.data.4)
housing.data.4$rad <- impute(housing.data.4$rad, mean)
summary(housing.data.4)
housing.data.5 <- housing.data
housing.data.5$ptratio <- impute(housing.data.5$ptratio, median)
housing.data.5$rad <- impute(housing.data.5$rad, median)
summary(housing.data.5)
#constante
housing.data.6 <- housing.data
#constante
housing.data.6 <- housing.data
housing.data.6$ptratio <- impute(housing.data.6$ptratio, 18)
housing.data.6$rad <- impute(housing.data.6$rad, 7)
summary(housing.data.6)
#####################################################
## Visualizacion
#####################################################
install.packages("mice")
library(mice)
md.pattern(housing.data)
install.packages("VIM")
library("VIM")
aggr(housing.data)
aggr(housing.data)
aggr(
housing.data,
col = c('green','red'))
aggr(
housing.data,
col = c('green','red'),
numbers = TRUE
)
aggr(
housing.data,
col = c('green','red'),
numbers = TRUE,
sortVars = TRUE
)
aggr(
housing.data,
col = c('green','red'),
numbers = TRUE,
sortVars = TRUE
)
aggr(
housing.data,
col = c('green','red'),
numbers = TRUE,
sortVars = TRUE,
cex.axis = 0.7
)
aggr(
housing.data,
col = c('green','red'),
numbers = TRUE,
sortVars = TRUE,
cex.axis = 0.7,
gap = 2.5
)
aggr(
housing.data,
col = c('green','red'),
numbers = TRUE,
sortVars = TRUE,
cex.axis = 0.7,
gap = 2.5,
ylab = c("Histograma de NA", "Patrón")
)
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
crime.data <- read.csv("Seccion 03 - Adquirir y preparar nuestros ingredientes - Los Datos/USArrests.csv")
View(crime.data)
crime.data <- read.csv("Seccion 03 - Adquirir y preparar nuestros ingredientes - Los Datos/USArrests.csv",
stringsAsFactors = FALSE)
View(crime.data)
# Vamos a agregar una columna con cbind
crime.data <- cbind(state = row.names(crime.data), crime.data)
crime.data.1 <- gather(crime.data,
key = "crime_type", value = "arrest_estimate",
Murder : UrbanPop)
View(crime.data.1)
crime.data.2 <- gather(crime.data,
key = "crime_type", value = "arrest_estimate",
-state)
View(crime.data.2)
crime.data.3 <- gather(crime.data,
key = "crime_type", value = "arrest_estimate",
Murder, Assault)
View(crime.data.3)
######################################
#podemos hacer un "pivot"
######################################
crime.data.4 <- spread(crime.data.2,
key = "crime_type",value = "arrest_estimate")
View(crime.data.4)
######################################
#Combinar columas
######################################
crime.data.5 <- unite(crime.data,
col = "Murder_Assault",
Muerder, Assault,
sep = "_")
######################################
#Combinar columas
######################################
crime.data.5 <- unite(crime.data,
col = "Murder_Assault",
Murder, Assault,
sep = "_")
View(crime.data.5)
######################################
#Ahora lo separamos
######################################
crime.data.6 <- separate(crime.data.5,
col = "Murder_Assault",
into = c("Murder","Assault"),
sep = "_")
View(crime.data.6)
library(mice)
housing.data <- read.csv("Seccion 03 - Adquirir y preparar nuestros ingredientes - Los Datos/housing-with-missing-value.csv",
header = TRUE,
stringsAsFactors = FALSE)
View(housing.data)
imputed_data <- mice(housing.data[,names(housing.data) %in% columns],
m = 5,
maxit = 50,
method = "pmm",
seed = 2018)
columns <- c("ptraio", "rad")
imputed_data <- mice(housing.data[,names(housing.data) %in% columns],
m = 5,
maxit = 50,
method = "pmm",
seed = 2018)
imputed_data <- mice(housing.data[,names(housing.data) %in% columns],
m = 5,
maxit = 50,
method = "pmm",
seed = 2018)
,names(housing.data) %in% columns
names(housing.data) %in% columns
columns <- c("ptratio", "rad")
imputed_data <- mice(housing.data[,names(housing.data) %in% columns],
m = 5,
maxit = 50,
method = "pmm",
seed = 2018)
imputed_data <- mice(housing.data[,names(housing.data) %in% columns],
m = 5,
maxit = 50,
method = "pmm",
seed = 2018)
View(imputed_data)
summary(imputed_data)
complete.data <- complete(imputed_data)
View(complete.data)
housing.data$ptratio <- complete.data$ptratio
housing.data$rad <- complete.data$rad
anyNA(housing.data)
library(Hmisc)
housing.data <- read.csv("Seccion 03 - Adquirir y preparar nuestros ingredientes - Los Datos/housing-with-missing-value.csv",
header = TRUE,
stringsAsFactors = FALSE)
impute_arg <- aregImpute(~ptradio + rad, data = housing.data, n.impute = 5)
impute_arg <- aregImpute(~ptratio + rad, data = housing.data, n.impute = 5)
View(impute_arg)
impute_arg
impute_arg$imputed$rad
ozone.data <- read.csv("Seccion 03 - Adquirir y preparar nuestros ingredientes - Los Datos/ozone.csv")
View(ozone.data)
View(ozone.data)
ozone.data <- read.csv("Seccion 03 - Adquirir y preparar nuestros ingredientes - Los Datos/ozone.csv",
stringsAsFactors = FALSE)
View(ozone.data)
outlier_values <- boxplot(ozone.data$pressure_height)$out
boxplot(ozone.data$pressure_height,
main = "Pressure Height")
boxplot(ozone.data$pressure_height,
main = "Pressure Height",
boxwex = 0.1)
boxplot(pressure_height ~ Month,
data = ozone.data,
main = "Pressure Height per month")
boxplot(ozone_reading ~ Month,
data = ozone.data,
main = "Pressure Height per month")
boxplot(ozone_reading ~ Month,
data = ozone.data,
main = "Ozone Reading per month")
######################################################
##### y para ver los outlier solamente....
######################################################
boxplot(ozone_reading ~ Month,
data = ozone.data,
main = "Ozone Reading per month")$out
######################################################
#39. Enmascarando los outliers con transformaciones y cappings
######################################################
imputed_outlier <- function(x, removeNA = TRUE){
quantiles = quantile(x, c(0.05, 0.95), na.rm = removeNA)
x[x<quantiles[1]] <- mean(x, na.rm = removeNA)
x[x>quantiles[1]] <- median(x, na.rm = removeNA)
}
imputed_data = imputed_outlier(ozone.data$pressure_height)
par(mfrow = c(1,2))
boxplot(ozone.data$pressure_height, main = "Datos originales")
boxplot(imputed_data, main = "Datos sin outlier")
######################################################
#39. Enmascarando los outliers con transformaciones y cappings
######################################################
imputed_outlier <- function(x, removeNA = TRUE){
quantiles = quantile(x, c(0.05, 0.95), na.rm = removeNA)
x[x<quantiles[1]] <- mean(x, na.rm = removeNA)
x[x>quantiles[1]] <- median(x, na.rm = removeNA)
x
}
imputed_data <- imputed_outlier(ozone.data$pressure_height)
par(mfrow = c(1,2))
boxplot(ozone.data$pressure_height, main = "Datos originales")
boxplot(imputed_data, main = "Datos sin outlier")
######################################################
#39. Enmascarando los outliers con transformaciones y cappings
######################################################
imputed_outlier <- function(x, removeNA = TRUE){
quantiles = quantile(x, c(0.05, 0.95), na.rm = removeNA)
x[x<quantiles[1]] <- mean(x, na.rm = removeNA)
x[x>quantiles[2]] <- median(x, na.rm = removeNA)
x
}
imputed_data <- imputed_outlier(ozone.data$pressure_height)
par(mfrow = c(1,2))
boxplot(ozone.data$pressure_height, main = "Datos originales")
boxplot(imputed_data, main = "Datos sin outlier")
replaced_data <- replace_outlier(ozone.data$pressure_height)
######################################################
#Ota forma sería reemplazando el el q1 y el q3
######################################################
replace_outlier <- function(x, removeNA = TRUE){
quantiles = quantile(x, c(0.05, 0.95), na.rm = removeNA)
x[x<quantiles[1]] <- quantiles[1]
x[x>quantiles[2]] <- quantiles[2]
x
}
replaced_data <- replace_outlier(ozone.data$pressure_height)
replaced_data <- replace_outlier(ozone.data$pressure_height)
par(mfrow = c(1,3))
boxplot(ozone.data$pressure_height, main = "Datos originales")
boxplot(imputed_data, main = "Datos sin outlier (promedio)")
boxplot(replaced_data, main = "Datos sin outlier (reemplazo)")
######################################################
#Ota forma sería reemplazando el el q1 y el q3
######################################################
replace_outlier <- function(x, removeNA = TRUE){
qrts <- quantile(x, probs = c(0.25, 0.75), na.rm = removeNA)
caps <- quantile(x, probs = c(0.05, 0.95), na.rm = removeNA)
iqr <- qrts[2]-qrts[1]
h <- iqr * 1.5
x[x<qrts[1]-h] <- caps[1]
x[x<qrts[2]+h] <- caps[2]
x
}
replaced_data <- replace_outlier(ozone.data$pressure_height)
par(mfrow = c(1,3))
boxplot(ozone.data$pressure_height, main = "Datos originales")
boxplot(imputed_data, main = "Datos sin outlier (promedio)")
boxplot(replaced_data, main = "Datos sin outlier (reemplazo)")
######################################################
#Ota forma sería reemplazando el el q1 y el q3
######################################################
replace_outlier <- function(x, removeNA = TRUE){
qrts <- quantile(x, probs = c(0.25, 0.75), na.rm = removeNA)
caps <- quantile(x, probs = c(0.05, 0.95), na.rm = removeNA)
iqr <- qrts[2]-qrts[1]
h <- iqr * 1.5
x[x<qrts[1]-h] <- caps[1]
x[x<qrts[2]+h] <- caps[2]
x
}
replaced_data <- replace_outlier(ozone.data$pressure_height)
par(mfrow = c(1,3))
boxplot(ozone.data$pressure_height, main = "Datos originales")
boxplot(imputed_data, main = "Datos sin outlier (promedio)")
boxplot(replaced_data, main = "Datos sin outlier (reemplazo)")
######################################################
#Ota forma sería reemplazando el el q1 y el q3
######################################################
replace_outlier <- function(x, removeNA = TRUE){
qrts <- quantile(x, probs = c(0.25, 0.75), na.rm = removeNA)
caps <- quantile(x, probs = c(0.05, 0.95), na.rm = removeNA)
iqr <- qrts[2]-qrts[1]
h <- iqr * 1.5
x[x<qrts[1]-h] <- caps[1]
x[x>qrts[2]+h] <- caps[2]
x
}
replaced_data <- replace_outlier(ozone.data$pressure_height)
par(mfrow = c(1,3))
boxplot(ozone.data$pressure_height, main = "Datos originales")
boxplot(imputed_data, main = "Datos sin outlier (promedio)")
boxplot(replaced_data, main = "Datos sin outlier (reemplazo)")
data <- read.csv("Seccion 04 - El análisis exploratorio de datos/auto-mpg.csv")
View(data)
data <- read.csv("Seccion 04 - El análisis exploratorio de datos/auto-mpg.csv",
header = TRUE,
stringsAsFactors = FALSE)
View(data)
summary(data)
#Cambios a categoria la variable cylinders (no nos interesa como numerica)
data$cylinders <- factor(data$cylinders)
summary(data)
#Cambios a categoria la variable cylinders (no nos interesa como numerica)
data$cylinders <- factor(data$cylinders,
levels = c(3, 4, 5, 6, 8),
labels = c("3 cil", "4 cil", "5 cil", "6 cil", "8 cil"))
summary(data)
View(data)
str(data)
summary(data$cylinders)
summary(data$mpg)
####################################################
## 42. Estadísticos y medidas básicas
####################################################
install.packages("modeest")
install.packages("raster")
install.packages("moments")
## Medidas de centralización
x = data$mpg
## Medidas de centralización
mean(x)
sum(x)/length(x)
median(x)
modal(x)
mode(x)
mfu(x)
mfv(x)
library(modeest) #moda
library(modeest)
install.packages("genefilter")
library(modeest) #moda
install.packages("BiocManager")
####################################################
## 42. Estadísticos y medidas básicas
####################################################
install.packages("modeest")
library(modeest) #moda
install.packages("BiocManager")
library("BiocManager")
BiocManager::install("genefilter")
BiocManager::install("digest")
library(modeest) #moda
library(raster) #quantiles y cv
library(moments) #asimetria y curtosis
mfv(x)
quantile(x)
## Medidas de centralización
mean(x) # sum(x)/length(x)
median(x) #media
mfv(x) #Moda
quantile(x) #cuantiles
## Medidas de dispersion
var(x)
sd(x) # Descviación estandard
cv(x)
## Medidas de asimetria
skewness(x)
kurtosis(x)
hist(x)
data <- read.csv("Seccion 04 - El análisis exploratorio de datos/auto-mpg.csv",
header = TRUE,
stringsAsFactors = FALSE)
# Buscamos subconjuntos basados en los idx
data[1:5,8:9]
# Buscamos subconjuntos basados en los idx por nombre
data[1:5,c("model_year", "car_name")]
data[1:5,c(8,9)]
# Min & max
data[data$mpg == max(data$mpg)]
# Min & max
data[data$mpg == max(data$mpg),]
# Min & max
data[data$mpg == min(data$mpg) | data$mpg == max(data$mpg),]
# Por condicion
data[data$mpg>30 & data$cylinders == 6,]
# Por condicion
data[data$mpg>30 & data$cylinders == 6,]
# Por condicion
data[data$mpg>30 & data$cylinders == 6,]
data[data$mpg>30 & data$cylinders == 6,c("car_name","mpg")]
####################################################
# subset
####################################################
subset(data, mpg>30)
####################################################
# subset
####################################################
subset(data, mpg>30 & cylinders == 6)
####################################################
# subset
####################################################
subset(data, mpg>30 & cylinders == 6, select = c("car_name", "mpg"))
subset(data, mpg>30 , select = c("car_name", "mpg","model_year"))
subset(data, mpg>35 , select = c("car_name", "mpg","model_year"))
subset(data, mpg>40 , select = c("car_name", "mpg","model_year"))
subset(data, mpg>40 , select = c("car_name", "mpg","model_year","cylinders"))
data <- read.csv("Seccion 04 - El análisis exploratorio de datos/auto-mpg.csv",
header = T,
stringsAsFactors = F)
View(data)
## Split
carslist <- split(data, data$cylinders)
View(carslist)
carslist[["3"]]
str(carslist[1])
str(carslist[[1]])
install.packages("caret")
library(caret)
data <- read.csv("Seccion 04 - El análisis exploratorio de datos/BostonHousing.csv",
header = T,
stringsAsFactors = F)
training.ids <- createDataPartition(data$MEDV, p = 0.8, list = F)
View(training.ids)
data.training <- data[training.ids,]
data.test <- data[!training.ids,]
data.test <- data[-training.ids,]
training.ids2 <- createDataPartition(data$MEDV, p = 0.7, list = F)
training.ids.2 <- createDataPartition(data$MEDV, p = 0.7, list = F)
data.training.2 <- data[training.ids.2,]
temp <- data[-training.ids.2,]
training.ids.3 <- createDataPartition(temp$MEDV, p = 0.5, list = F)
data.test.2 <- data[training.ids.3,]
data.validation.2 <- data[-training.ids.3,]
View(data.test.2)
data.test.2 <- temp[training.ids.3,]
data.validation.2 <- temp[-training.ids.3,]
