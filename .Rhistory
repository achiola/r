destfile = "Seccion 14 - Datos geoespaciales/mimapa.jpeg")
PlotOnStaticMap(miMapa)
miMapa <- GetMap(center = c(lat, lon), zoom = 14,
destfile = "Seccion 14 - Datos geoespaciales/mimapa.jpeg",
format = "jpeg")
PlotOnStaticMap(miMapa)
miMapa <- GetMap(center = c(lat, lon), zoom = 14,
destfile = "Seccion 14 - Datos geoespaciales/mimapa.jpeg",
format = "jpeg",
maptype = "satellite")
PlotOnStaticMap(miMapa)
miMapa <- GetMap(center = c(lat, lon), zoom = 14,
#destfile = "Seccion 14 - Datos geoespaciales/mimapa.jpeg",
#format = "jpeg",
maptype = "satellite")
PlotOnStaticMap(miMapa)
PlotOnStaticMap(miMapa)
miMapa <- GetMap(center = c(lat, lon), zoom = 14,
#destfile = "Seccion 14 - Datos geoespaciales/mimapa.jpeg",
#format = "jpeg",
maptype = "satellite")
PlotOnStaticMap(miMapa)
miMapa <- GetMap(center = c(lat, lon), zoom = 14,
destfile = "Seccion 14 - Datos geoespaciales/mimapa.jpeg",
format = "jpeg",
maptype = c("satellite"))
PlotOnStaticMap(miMapa)
PlotOnStaticMap(miMapa)
#-32.754211, -63.790825
lat <- -32.754211
lon <- -63.790825
#jpeg png pdf
miMapa <- GetMap(center = c(lat, lon), zoom = 14,
destfile = "Seccion 14 - Datos geoespaciales/mimapa.jpeg",
format = "jpeg",
maptype = "satellite")
PlotOnStaticMap(miMapa)
#jpeg png pdf
miMapa <- GetMap(center = c(lat, lon), zoom = 14,
destfile = "Seccion 14 - Datos geoespaciales/mimapa.jpeg",
format = "jpeg",
maptype = "hybrid")
PlotOnStaticMap(miMapa)
library(RgoogleMaps)
wages <- read.csv("Seccion 14 - Datos geoespaciales/nj-wages.csv")
head(wages)
wages$wgClass <- cut(wages$Avgwg,
quantile(wages$Avgwg, probs = seq(0,1 , 0.2)),
labels = F,
include.lowest = T)
View(wages)
pal <- palette(rainbow(5))
map <- MapBackground(lat = 40.155, lon = 74.715)
map <- MapBackground(lat = 40.155, lon = 74.715)
map <- MapBackground(lat = 40.155, lon = -74.715)
class(map)
mapa <- MapBackground(lat = 40.155, lon = -74.715)
library(RgoogleMaps)
wages <- read.csv("Seccion 14 - Datos geoespaciales/nj-wages.csv")
head(wages)
wages$wgClass <- cut(wages$Avgwg,
quantile(wages$Avgwg, probs = seq(0,1 , 0.2)),
labels = F,
include.lowest = T)
pal <- palette(rainbow(5))
map <- MapBackground(lat = 40.155, lon = -74.715)
map <- MapBackground(lat = 40.155, lon = -74.715, NEWMAP = T)
map <- MapBackground(lat = 40.155, lon = -74.715, NEWMAP = T, myTile )
map <- MapBackground(lat = 40.155, lon = -74.715, NEWMAP = F)
library(RgoogleMaps)
wages <- read.csv("Seccion 14 - Datos geoespaciales/nj-wages.csv")
head(wages)
wages$wgClass <- cut(wages$Avgwg,
quantile(wages$Avgwg, probs = seq(0,1 , 0.2)),
labels = F,
include.lowest = T)
pal <- palette(rainbow(5))
map <- MapBackground(lat = 40.155, lon = -74.715, NEWMAP = F)
map <- MapBackground(lat = 40.155, lon = -74.715)
map <- MapBackground(lat = 40.155, lon = -74.715, destfile = "Seccion 14 - Datos geoespaciales/nj.jpeg")
map <- MapBackground(lat = 40.155, lon = -74.715, destfile = "Seccion 14 - Datos geoespaciales/nj.jpeg", myTile = "nj.jpeg")
install.packages(c("digest", "Rcpp"))
#map <- MapBackground(lat = 40.155, lon = -74.715, destfile = "Seccion 14 - Datos geoespaciales/nj.jpeg", myTile = "nj.jpeg")
map <- MapBackground(lat = 40.155, lon = -74.715)
#map <- MapBackground(lat = 40.155, lon = -74.715, destfile = "Seccion 14 - Datos geoespaciales/nj.jpeg", myTile = "nj.jpeg")
map <- MapBackground(lat = 40.155, lon = -74.715)
library(RgoogleMaps)
wages <- read.csv("Seccion 14 - Datos geoespaciales/nj-wages.csv")
head(wages)
wages$wgClass <- cut(wages$Avgwg,
quantile(wages$Avgwg, probs = seq(0,1 , 0.2)),
labels = F,
include.lowest = T)
pal <- palette(rainbow(5))
#map <- MapBackground(lat = 40.155, lon = -74.715, destfile = "Seccion 14 - Datos geoespaciales/nj.jpeg", myTile = "nj.jpeg")
map <- MapBackground(lat = 40.155, lon = -74.715)
#map <- MapBackground(lat = 40.155, lon = -74.715, destfile = "Seccion 14 - Datos geoespaciales/nj.jpeg", myTile = "nj.jpeg")
map <- MapBackground(lat = 40.155, lon = -74.715)
#map <- MapBackground(lat = 40.155, lon = -74.715, destfile = "Seccion 14 - Datos geoespaciales/nj.jpeg", myTile = "nj.jpeg")
map <- MapBackground(lat = -40.155, lon = -74.715)
#map <- MapBackground(lat = 40.155, lon = -74.715, destfile = "Seccion 14 - Datos geoespaciales/nj.jpeg", myTile = "nj.jpeg")
map <- MapBackground(lat = 40.155, lon = -74.715,
PLOT = T)
#map <- MapBackground(lat = 40.155, lon = -74.715, destfile = "Seccion 14 - Datos geoespaciales/nj.jpeg", myTile = "nj.jpeg")
map <- MapBackground(lat = 40.155, lon = -74.715,
PLOT = F)
#map <- MapBackground(lat = 40.155, lon = -74.715, destfile = "Seccion 14 - Datos geoespaciales/nj.jpeg", myTile = "nj.jpeg")
map <- MapBackground(lat = 40.155, lon = -74.715,
NEWMAP = F)
#map <- MapBackground(lat = 40.155, lon = -74.715, destfile = "Seccion 14 - Datos geoespaciales/nj.jpeg", myTile = "nj.jpeg")
map <- MapBackground(lat = 40.155, lon = -74.715,
NEWMAP = T)
#map <- MapBackground(lat = 40.155, lon = -74.715, destfile = "Seccion 14 - Datos geoespaciales/nj.jpeg", myTile = "nj.jpeg")
map <- MapBackground(lat = 40.155, lon = -74.715,
NEWMAP = T, myTile = )
#map <- MapBackground(lat = 40.155, lon = -74.715, destfile = "Seccion 14 - Datos geoespaciales/nj.jpeg", myTile = "nj.jpeg")
map <- MapBackground(lat = 40.155, lon = -74.715,
NEWMAP = T, myTile = myTile)
map <- MapBackground(lat = 40.155, lon = -74.715)
la = 1
ln = 1
map <- MapBackground(lat = la, lon = ln)
map <- MapBackground(lat=40.155, lon=-74.715)
map <- MapBackground(lat=40.155, lon=-74.715, verbose = 1)
map <- MapBackground(lat=40.155, lon=-74.715, verbose = 10)
map <- MapBackground(lat=40.155, lon=-74.715, queseo = 1)
map <- MapBackground(center = c(lat=40.155, lon=-74.715))
map <- MapBackground(center = c(40.155, -74.715))
map <- MapBackground(lat=40.155, lon=-74.715)
library(RgoogleMaps)
mapita <- MapBackground(lat=40.155, lon=-74.715)
mapita <- MapBackground(lat=40.155,lon=-74.715)
mapita <- MapBackground(lat=40.155,lon=-74.715,myTile = "")
mapita <- MapBackground(lat=40.155,lon=-74.715,myTile = c(2,2))
mapita <- MapBackground(lat=40.155,lon=-74.715,myTile = c(3,3))
map <- MapBackground()
map <- MapBackground(lat = 0)
map <- MapBackground(lat = 0, lon = 0)
map <- MapBackground(lat = 0, lon = 0, NEWMAP = T)
map <- MapBackground(lat = 0, lon = 0, NEWMAP = T, myTile)
map <- MapBackground(lat = 0, lon = 0, NEWMAP = T, myTile, size = c(640, 640))
lat = 40.155
lon = 74.715
map <- GetMap(center = c(lat,lon), zoom = 8)
PlotOnStaticMap(map, lat, lon)
lon = -74.715
map <- GetMap(center = c(lat,lon), zoom = 8)
PlotOnStaticMap(map, lat, lon)
PlotOnStaticMap(map, wages$Lat, wages$Long,
pch = 21,
cex = sqrt(wages$wgClass),
bg = pal[wages$wgClass])
map2 <- MapBackground(wages$Lat, wages$Long)
PlotOnStaticMap(map2, wages$Lat, wages$Long,
pch = 21,
cex = sqrt(wages$wgClass),
bg = pal[wages$wgClass])
legend("topleft",
legend = paste("<=", round(tapply(wages$Avgwg, wages$wgClass, max)),0),
pch = 21,
pt.bg = pal,
pt.cex = 1.0,
bg="gray",
title = "Ingresos promedio")
legend("topleft",
legend = paste("<=", round(tapply(wages$Avgwg, wages$wgClass, max),0)),
pch = 21,
pt.bg = pal,
pt.cex = 1.0,
bg="gray",
title = "Ingresos promedio")
install.packages(c("ggmap","maps"))
install.packages(c("ggmap","maps"))
install.packages(c("ggmap","maps"))
#install.packages(c("ggmap","maps"))
library(ggmap)
library(maps)
crimes <- read.csv("Seccion 14 - Datos geoespaciales/chicago-crime.csv")
head(crime)
head(crime)
head(crimes)
crimes$Date <- strptime(crimes$Date, format = "%m/%d/%y %H:%M")
head(crimes)
chicago <- get_map(location = "chicago", zoom = 11)
?register_google
register_google(key = "AIzaSyCFprWxRMsZfv-PEdaQ8FjWZ_J52cd-WVI")
chicago <- get_map(location = "chicago", zoom = 11)
register_google(key = "AIzaSyCFprWxRMsZfv-PEdaQ8FjWZ_J52cd-WVI")
chicago <- get_map(location = "chicago", zoom = 11)
chicago <- get_map(location = "chicago", zoom = 11)
register_google(key = "AIzaSyDmw5HUU5WyijCFFC01gn2zQpmFrmyu0R0")
chicago <- get_map(location = "chicago", zoom = 11)
library(RgoogleMaps)
lat = 41.8339042
lon = -88.0121581
chicago <- GetMap(center = c(lat,lon), zoom = 8)
chicago <- GetMap(center = c(lat,lon), zoom = 8)
ggmap(chicago)
chicago <- get_map(location = c(lat,lon), zoom = 11)
counts <- as.data.frame(table(round(crimes$Longitude,2),
round(crimes$Latitude,2)
)
)
head(counts)
head(counts,100)
counts$Long <- as.numeric(as.character(counts$Var1))
counts$Lon <- as.numeric(as.character(counts$Var1))
View(counts)
counts$Long <- NULL
counts$Lat <- as.numeric(as.character(counts$Var2))
counts$Var1 <- NULL
counts$Var2 <- NULL
map2 <- MapBackground(counts$Lat, counts$Lon)
PlotOnStaticMap(map2, wages$Lat, wages$Long,
pch = 21,
cex = sqrt(counts$Freq),
bg = "red")
PlotOnStaticMap(map2, counts$Lat, counts$Long,
pch = 21,
cex = sqrt(counts$Freq),
bg = "red")
map2 <- MapBackground(counts$Lat, counts$Lon, zoom = 17)
PlotOnStaticMap(map2, counts$Lat, counts$Long,
pch = 21,
cex = sqrt(counts$Freq),
bg = "red")
map2 <- MapBackground(counts$Lat, counts$Lon, zoom = 20)
PlotOnStaticMap(map2, counts$Lat, counts$Long,
pch = 21,
cex = sqrt(counts$Freq),
bg = "red")
map2 <- MapBackground(counts$Lat, counts$Lon, zoom = 20)
PlotOnStaticMap(map2, counts$Lat, counts$Long,
pch = 21,
cex = sqrt(counts$Freq),
bg = "red")
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = sqrt(counts$Freq),
bg = "red")
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 10,
bg = "red")
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1,
bg = "red")
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 0.5,
bg = "red")
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 0.5,
bg = "red",
alpha = counts$Freq)
pal <- AddAlpha(palette())
pal <- AddAlpha(palette(rainbow(5)))
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 0.5,
bg = pal[counts$Freq])
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1,
bg = pal[counts$Freq])
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1,
bg = pal[counts$Freq],
border = NA)
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1,
bg = pal[counts$Freq],
border = NULL)
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1,
bg = pal[counts$Freq],
fg = NULL)
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1,
bg = pal[counts$Freq],
fg = NA)
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1,
bg = pal[counts$Freq],
fg = "transparent")
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1,
bg = pal[counts$Freq],
bc = "transparent")
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 0,
bg = pal[counts$Freq],
fg = "NA")
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1,
bg = pal[counts$Freq],
fg = "NA")
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 20,
cex = 1,
bg = pal[counts$Freq],
fg = "NA")
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 22,
cex = 1,
bg = pal[counts$Freq],
fg = "NA")
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 22,
cex = 1,
bg = pal[counts$Freq],
lwd = 0)
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1,
bg = pal[counts$Freq],
lwd = 0)
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1,
bg = pal[counts$Freq],
lwd = NA)
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1,
bg = pal[counts$Freq],
lwd = NULL)
pal <- AddAlpha(palette("red"))
pal <- AddAlpha(palette("red","green"))
pal <- AddAlpha(palette(c("red","green")))
map2 <- MapBackground(counts$Lat, counts$Lon, zoom = 20)
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1,
bg = pal[counts$Freq],
lwd = NULL)
pal
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 21,
cex = 1.5,
bg = pal[counts$Freq],
lwd = NULL)
PlotOnStaticMap(map2, counts$Lat, counts$Lon,
pch = 1,
cex = 1.5,
bg = pal[counts$Freq],
lwd = NULL)
install.packages("sp")
install.packages("rgdal")
library(sp)
library(rgdal)
countries.sp <- readOGR("Seccion 14 - Datos geoespaciales/natural_earth/",
"ne_50m_admin_0_countries")
countries.sp <- readOGR("Seccion 14 - Datos geoespaciales/natural_earth/",
"ne_50m_admin_0_countries")
countries.sp <- readOGR("Seccion 14 - Datos geoespaciales/natural_earth/",
"ne_50m_admin_0_countries")
countries.sp <- readOGR("/Seccion 14 - Datos geoespaciales/natural_earth/",
"ne_50m_admin_0_countries")
countries.sp <- readOGR("natural_earth/",
"ne_50m_admin_0_countries")
countries.sp <- readOGR("Seccion 14 - Datos geoespaciales/natural_earth/",
"ne_50m_admin_0_countries")
countries.sp <- readOGR("C:/proyectos/r/curso_r/curso/Seccion 14 - Datos geoespaciales/natural_earth/",
"ne_50m_admin_0_countries")
countries.sp <- readOGR("Seccion 14 - Datos geoespaciales/natural_earth/",
"ne_50m_admin_0_countries")
countries.sp <- readOGR("Seccion 14 - Datos geoespaciales/natural_earth/",
"ne_50m_admin_0_countries", verbose = T)
countries.sp <- readOGR(dsn="Seccion 14 - Datos geoespaciales/natural_earth/",
layer = "ne_50m_admin_0_countries", verbose = T)
countries.sp <- readOGR(dsn="Seccion 14 - Datos geoespaciales/natural_earth",
layer = "ne_50m_admin_0_countries", verbose = T)
airports.sp <- readOGR(dsn="Seccion 14 - Datos geoespaciales/natural_earth",
layer = "ne_50m_airports")
class(countries.sp)
class(airports.sp)
plot(countries.sp)
plot(airports.sp)
plot(countries.sp)
plot(countries.sp,
col = countries.sp@data$admin)
plot(airports.sp, add = TRUE)
spplot(countries.sp,c("economy"))
plot(airports.sp, add = TRUE)
plot(countries.sp,
col = countries.sp@data$economy)
plot(countries.sp,
col = countries.sp@data$admin)
plot(airports.sp, add = TRUE)
spplot(countries.sp,c("pop_est"))
plot(countries.sp,
col = countries.sp@data$mapcolor7)
plot(airports.sp, add = TRUE)
plot(countries.sp,
col = countries.sp@data$mapcolor8)
plot(countries.sp,
col = countries.sp@data$mapcolor13)
plot(countries.sp,
col = countries.sp@data$mapcolor9)
plot(airports.sp, add = TRUE)
spplot(countries.sp,c("gdp_md_est"))
spplot(countries.sp,c("mapcolor13"))
spplot(countries.sp, col = countries.sp@data$mapcolor13)
library(maps)
map("world")
map("world", interior = F)
map("world", fill = T, col = palette(rainbow(8)))
map("world", fill = T, col = palette(rainbow(256)))
map("world","tanzania")
map("world","argentina")
map("france")
map("france")
map("argentina")
map("argentine")
map("spain")
map("france")
map("usa")
map("usa")
map("state")
map("country")
map("county")
map("county", fill = T, col = palette(rainbow(256)))
map("county", "new jersey",fill = T, col = palette(rainbow(256)))
library(sp)
nj <- read.csv("Seccion 14 - Datos geoespaciales/nj-wages.csv")
class(nj)
coordinates(nj) <- c("Long", "Lat")
class(nj)
plot(nj)
nj.lines <- SpatialLines(list(Lines(list(Line(coordinates(nj))))))
nj.lines <- SpatialLines(list(Lines(list(Line(coordinates(nj))),"linenj")))
plot(nj.lines)
library(sp)
library(maps)
library(maptools)
nj <- read.csv("Seccion 14 - Datos geoespaciales/nj-county-data.csv")
View(nj)
nj.data <- read.csv("Seccion 14 - Datos geoespaciales/nj-county-data.csv")
nj.map <- map("country", "new jersey", fill = T, plot = F)
install.packages("maptools")
install.packages("maptools")
#install.packages("maptools")
library(maps)
library(maptools) #incluye sp
#install.packages("maptools")
library(maps)
library(maptools) #incluye sp
nj.data <- read.csv("Seccion 14 - Datos geoespaciales/nj-county-data.csv")
nj.map <- map("country", "new jersey", fill = T, plot = F)
install.packages("maps")
install.packages("maps")
#install.packages("maps")
library(maps)
library(maptools) #incluye sp
gpclibPermit()
gpclibPermit(T)
gpclibPermit()
gpclibPermit() <- T
nj.map <- map("country", "new jersey", fill = T, plot = F)
gpclibPermit()
install.packages("gpclib")
library(maps)
library(maptools) #incluye sp
nj.data <- read.csv("Seccion 14 - Datos geoespaciales/nj-county-data.csv")
nj.map <- map("country", "new jersey", fill = T, plot = F)
gpclibPermit()
nj.map <- map("country", "new jersey", fill = T, plot = F)
nj.map <- map("country", "new jersey", fill = T, plot = F)
map:::countryMapEnv
maptools:::countryMapEnv
#install.packages("gpclib")
library(maps)
library(maptools) #incluye sp
maptools:::countryMapEnv
nj.data <- read.csv("Seccion 14 - Datos geoespaciales/nj-county-data.csv")
nj.map <- map("country", "new jersey", fill = T, plot = F)
install.packages("maps")
install.packages("maps")
install.packages("maptools")
install.packages("gpclib")
#install.packages("gpclib")
library(maps)
library(maptools) #incluye sp
maptools:::countryMapEnv
#install.packages("gpclib")
library(maps)
library(maptools) #incluye sp
maptools:::countryMapEnv
nj.data <- read.csv("Seccion 14 - Datos geoespaciales/nj-county-data.csv")
nj.map <- map("country", "new jersey", fill = T, plot = F)
#install.packages("gpclib")
library(maps)
library(maptools) #incluye sp
maptools:::countryMapEnv
nj.data <- read.csv("Seccion 14 - Datos geoespaciales/nj-county-data.csv")
nj.map <- map("country", "new jersey", fill = T, plot = F)
#install.packages("gpclib")
library(sp)
sp:::countryMapEnv
nj.data <- read.csv("Seccion 14 - Datos geoespaciales/nj-county-data.csv")
nj.map <- map("country", "new jersey", fill = T, plot = F)
